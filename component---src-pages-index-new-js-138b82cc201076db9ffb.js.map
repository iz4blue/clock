{"version":3,"sources":["webpack:///./src/components/bar.js","webpack:///./src/components/percent.js","webpack:///./src/components/segment_7.js","webpack:///./src/components/segments.js","webpack:///./src/pages/index-new.js"],"names":["Bar","props","Percent","id","value","toFixed","getStyle","styles","displayNo0","displayNo1","displayNo2","displayNo3","displayNo4","displayNo5","displayNo6","displayNo7","displayNo8","displayNo9","displayO","Segment","className","displayContainer","displaySize12","join","segmentX","segmentA","segmentBorder","segmentY","segmentB","segmentC","segmentD","segmentE","segmentF","segmentG","Segments","segmentList","String","split","map","char","index","key","getPercent","date_first_2020","Date","ts_2020_total","getTime","useState","globalPercent","setGlobalPercent","update","time","useEffect","window","requestAnimationFrame","initialValue"],"mappings":"2HAUeA,MARf,SAAaC,GACX,OACE,oCACE,+CCKSC,MARf,SAAiBD,GACf,OACE,oCACE,qCAAU,0BAAME,GAAG,WAAWF,EAAMG,MAAMC,QAAQ,IAAlD,O,iCCCN,SAASC,EAASF,GAChB,OAAOA,GACL,KAAK,EAAG,IAAK,IAAK,OAAOG,IAAOC,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOD,IAAOE,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOF,IAAOG,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOH,IAAOI,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOJ,IAAOK,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOL,IAAOM,WAChC,KAAK,EAAG,IAAK,IAAK,OAAON,IAAOO,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOP,IAAOQ,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOR,IAAOS,WAChC,KAAK,EAAG,IAAK,IAAK,OAAOT,IAAOU,WAChC,IAAK,IAAK,OAAOV,IAAOW,SACxB,QACE,OAAOX,IAAOC,YAgCLW,MA5Bf,YAA2B,IAATf,EAAQ,EAARA,MAChB,OACE,yBAAKgB,UAAW,CAACb,IAAOc,iBAAkBd,IAAOe,cAAehB,EAASF,IAAQmB,KAAK,MACpF,yBAAKH,UAAW,CAACb,IAAOiB,SAAUjB,IAAOkB,UAAUF,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,iBAE1B,yBAAKN,UAAW,CAACb,IAAOoB,SAAUpB,IAAOqB,UAAUL,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,iBAE1B,yBAAKN,UAAW,CAACb,IAAOoB,SAAUpB,IAAOsB,UAAUN,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,iBAE1B,yBAAKN,UAAW,CAACb,IAAOiB,SAAUjB,IAAOuB,UAAUP,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,iBAE1B,yBAAKN,UAAW,CAACb,IAAOoB,SAAUpB,IAAOwB,UAAUR,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,iBAE1B,yBAAKN,UAAW,CAACb,IAAOoB,SAAUpB,IAAOyB,UAAUT,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,iBAE1B,yBAAKN,UAAW,CAACb,IAAOiB,SAAUjB,IAAO0B,UAAUV,KAAK,MACtD,0BAAMH,UAAWb,IAAOmB,mBC5BjBQ,MAff,YAA4B,IAAT9B,EAAQ,EAARA,MAIX+B,EAHcC,OAAOhC,GACEiC,MAAM,IAENC,KAC3B,SAACC,EAAMC,GAAP,OAAkB,kBAAC,EAAD,CAASC,IAAKD,EAAOpC,MAAOmC,OAGhD,OACE,oCACGJ,ICRP,SAASO,IACP,IAAMC,EAAkB,IAAIC,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhDC,EADiB,IAAID,KAAK,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,KACrBE,UAAYH,EAAgBG,UAKjE,QAHe,IAAIF,MACmBE,UAAYH,EAAgBG,WAElCD,EAAgB,IAGnC,qBAAO,IAAD,EACuBE,mBAASL,KAA5CM,EADY,KACGC,EADH,KAEbC,EAAS,SAAAC,GACbF,EAAiBP,MAWnB,OARAU,qBAAU,WACRF,MACC,CAACF,IAEA,oBAAOK,QACTA,OAAOC,sBAAsBJ,GAI7B,6BACE,kBAAC,EAAD,CAAKK,aAAcP,IACnB,kBAAC,EAAD,CAAS5C,MAAO4C,IAChB,yBAAK7C,GAAG,mBACN,kBAAC,EAAD,CAAUC,MAAO4C,EAAc3C,QAAQ","file":"component---src-pages-index-new-js-138b82cc201076db9ffb.js","sourcesContent":["import React from \"react\"\n\nfunction Bar(props) {\n  return (\n    <>\n      <div>Progress bar</div>\n    </>\n  );\n}\n\nexport default Bar;\n","import React from \"react\"\n\nfunction Percent(props) {\n  return (\n    <>\n      <div>2020 <span id=\"percent\">{props.value.toFixed(6)}</span>%</div>\n    </>\n  );\n}\n\nexport default Percent;\n","/*\n 다음의 code 를 참조함 : https://codepen.io/0x04/pen/KdBuA\n */\nimport React from \"react\"\nimport styles from \"../styles/segment_7.module.css\"\n\nfunction getStyle(value) {\n  switch(value) {\n    case 0: case '0': return styles.displayNo0\n    case 1: case '1': return styles.displayNo1\n    case 2: case '2': return styles.displayNo2\n    case 3: case '3': return styles.displayNo3\n    case 4: case '4': return styles.displayNo4\n    case 5: case '5': return styles.displayNo5\n    case 6: case '6': return styles.displayNo6\n    case 7: case '7': return styles.displayNo7\n    case 8: case '8': return styles.displayNo8\n    case 9: case '9': return styles.displayNo9\n    case '.': return styles.displayO\n    default:\n      return styles.displayNo0\n  }\n}\n\nfunction Segment({value}) {\n  return (\n    <div className={[styles.displayContainer, styles.displaySize12, getStyle(value)].join(' ')}>\n      <div className={[styles.segmentX, styles.segmentA].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n      <div className={[styles.segmentY, styles.segmentB].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n      <div className={[styles.segmentY, styles.segmentC].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n      <div className={[styles.segmentX, styles.segmentD].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n      <div className={[styles.segmentY, styles.segmentE].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n      <div className={[styles.segmentY, styles.segmentF].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n      <div className={[styles.segmentX, styles.segmentG].join(' ')}>\n        <span className={styles.segmentBorder}></span>\n      </div>\n    </div>\n  );\n}\n\nexport default Segment;\n","import React from \"react\"\nimport Segment from \"./segment_7\"\n\nfunction Segments({value}) {\n  const floatString = String(value)\n  const charList = floatString.split('')\n\n  const segmentList = charList.map(\n    (char, index) => (<Segment key={index} value={char} />)\n  )\n\n  return (\n    <>\n      {segmentList}\n    </>\n  )\n}\n\nexport default Segments;\n","import React, { useEffect, useState } from \"react\"\nimport Bar from \"../components/bar\"\nimport Percent from \"../components/percent\"\nimport Segments from \"../components/segments\"\n\nfunction getPercent() {\n  const date_first_2020 = new Date(2020, 0, 1, 0, 0, 0, 0);\n  const date_last_2020 = new Date(2020, 11, 31, 23, 59, 59, 999);\n  const ts_2020_total = date_last_2020.getTime() - date_first_2020.getTime();\n\n  let date_now = new Date();\n  let ts_now_from_first_2020 = date_now.getTime() - date_first_2020.getTime();\n\n  return ts_now_from_first_2020 / ts_2020_total * 100\n}\n\nexport default () => {\n  const [globalPercent, setGlobalPercent] = useState(getPercent())\n  const update = time => {\n    setGlobalPercent(getPercent())\n  }\n\n  useEffect(() => {\n    update()\n  }, [globalPercent])\n\n  if (typeof window !== `undefined`) {\n    window.requestAnimationFrame(update)\n  }\n\n  return (\n    <div>\n      <Bar initialValue={globalPercent} />\n      <Percent value={globalPercent} />\n      <div id=\"clock-container\">\n        <Segments value={globalPercent.toFixed(6)} />\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}